//MILSZTAIN_MACIA_SABIN

//LIBRERIAS
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <DHT.h>
#include <Preferences.h>

Preferences umbral_eeprom; //Se define el objeto umbral_eeprom

//ESTADOS
int ESTADO = 1;
#define PANTALLA1 1
#define PANTALLA2 2
#define SW1_5SEGS 3
#define SW1_OFF 4
#define SW1_OFF2 5
#define SW2_5SEGS 6
#define SW2_OFF2 7

//VARIABLES DE TIMERS
unsigned long timer;
unsigned long timer1000;
int segs;
int segs5;

//BOTONES
#define SW1 34 //switch de aumento de horas
int val1;
#define SW2 35 //switch de aumento de minutos
int val2;

//PANTALLA
#define LONGITUD 128 // longitud
#define ALTURA 64 // altura
Adafruit_SSD1306 display(LONGITUD, ALTURA, &Wire, -1);

//SENSOR DE TEMPERATURA
#define DHTPIN 23
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);
float temp;
float umbral = 24; //limite de temperatura

void setup() 
{
  Serial.begin(115200);
  Serial.println("Programa iniciado");

  //Botones
  pinMode(SW1, INPUT);
  pinMode(SW2, INPUT);

  //Display
  dht.begin(); //inicializa en sensor de temperatura
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C); //inicializa el display

  //Lectura inicial de eeprom
  umbral_eeprom.begin("ValorUmbral", true); //Se abre el eeprom en el setup en modo lectura (no se editan los valores del eeprom), "Valorumbral" es la carpeta 
    if (umbral_eeprom.isKey("umbral"))      //Si hay valores guardados en la clave "umbral" (no va a haber nada si no se le guardo nada previamente)
  {
    umbral = umbral_eeprom.getFloat("umbral", 24.0); //Se lee el valor guardado bajo la clave "umbral" de la eeprom, y se lo asigna a la variable umbral. Si no hay nada guardado, se pone 24
    Serial.print("Umbral de EEPROM: ");
    Serial.println(umbral);
  }
  umbral_eeprom.end(); //Se cierra el uso de umbral_eeprom
}

void loop() 
{
  //Se actualiza el reloj
  timer = millis();

  //Se lee la temperatura (en celcious)
  temp = dht.readTemperature();

  //Se leen los botones
  val1 = digitalRead(SW1);
  val2 = digitalRead(SW2);

  switch (ESTADO) //INICIO DE MÁQUINA DE ESTADOS
  {
    case PANTALLA1:
    display.clearDisplay(); //Se reinicia el display
    display.setTextSize(2); //Establece el tamaño de texto
    display.setTextColor(WHITE);
    
    display.setCursor(0, 10);
    display.println("TEMP:");
    display.setCursor(60, 10);
    display.println(temp); //display de temperatura

    display.setCursor(0, 50);
    display.println("UMB:");
    display.setCursor(60, 50);
    display.println(umbral); //display de umbral

    display.display(); //Muestra el display
      
    //CAMBIO DE ESTADO
    if (val1 == 0)
    {
      timer1000 = timer + 5000; //Se suman 5 segundos para comenzar el conteo
      ESTADO = SW1_5SEGS; //Se cambia de estado
    } 
    break;


    case SW1_5SEGS:
    if (timer > timer1000) //Si pasan 5 segundos
    {
      ESTADO = SW1_OFF; //Se cambia a estado sw1_off
      Serial.println("Ya se puede soltar 1");
    }

    if (val1 == 1) //Si el boton se suelta
    {
      timer1000 = timer; //Se reinicia la diferencia entre timers
      ESTADO = PANTALLA1; //Se regresa a pantalla1
    }
    break;


    case SW1_OFF:
    if (val1 == 1) //Si se suelta el boton
    {
      ESTADO = PANTALLA2;
    }
    break;


    case PANTALLA2:
    display.clearDisplay(); //Se reinicia el display
    display.setTextSize(2); //Establece el tamaño de texto
    display.setTextColor(WHITE);
    
    display.setCursor(0, 10);
    display.println("SETEAR UMB"); //display de temperatura
    display.setCursor(0, 40);
    display.println(umbral); //display de umbral

    display.display(); //Muestra el display

    if (val1 == 0) //Comienzo de sumar umbral
    {
      ESTADO = SW1_OFF2;
    }

    if (val2 == 0)
    {
      timer1000 = timer + 5000; //Se suman 5 segundos para comenzar el conteo
      ESTADO = SW2_5SEGS; //Se cambia de estado
    }
    break;


    case SW1_OFF2: 
    if (val1 == 1)
    {
      umbral = umbral + 1;
      ESTADO = PANTALLA2;
    }
    break;


    case SW2_5SEGS:
    if (val2 == 1) //Si el boton se suelta
    {
      umbral = umbral - 1;

      timer1000 = timer; //Se reinicia la diferencia entre timers
      ESTADO = PANTALLA2; //Se regresa a pantalla1
    }

    if (timer > timer1000) //Si pasan 5 segundos
    {
      ESTADO = SW2_OFF2; //Se cambia a estado sw2_off2
      Serial.println("Ya se puede soltar 2");
    } 
    break;


    case SW2_OFF2:
    if (val2 == 1)
    {
      ESTADO = PANTALLA1;
      
      //GUARDAR EL VALOR DEL UMBRAL EN LA EEPROM
      umbral_eeprom.begin("ValorUmbral", false);     //Se abre el eeprom en modo escritura (se van a editar los valores del eeprom) 
      umbral_eeprom.putFloat("umbral", umbral);      //En la clave "umbral" dentro del eeprom, se va a guardar el valor del umbral
      umbral_eeprom.end();                           //Se cierra el uso de umbral_eeprom

      Serial.print("Umbral en la EEPROM actualizado: ");
      Serial.println(umbral);
    }
    break;

  }
}
